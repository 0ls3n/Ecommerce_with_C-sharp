// <auto-generated />
using System;
using Ecommerce_Project.Models.Domain_Classes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce_Project.Migrations.ProductDb
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240911205051_ProductsAdded")]
    partial class ProductsAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce_Project.Models.Domain_Classes.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasDiscriminator().HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Ecommerce_Project.Models.Domain_Classes.Accessory", b =>
                {
                    b.HasBaseType("Ecommerce_Project.Models.Domain_Classes.Product");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Products", t =>
                        {
                            t.Property("Gender")
                                .HasColumnName("Accessory_Gender");

                            t.Property("Material")
                                .HasColumnName("Accessory_Material");
                        });

                    b.HasDiscriminator().HasValue("Accessory");
                });

            modelBuilder.Entity("Ecommerce_Project.Models.Domain_Classes.Clothing", b =>
                {
                    b.HasBaseType("Ecommerce_Project.Models.Domain_Classes.Product");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Products", t =>
                        {
                            t.Property("Color")
                                .HasColumnName("Clothing_Color");

                            t.Property("Gender")
                                .HasColumnName("Clothing_Gender");

                            t.Property("Material")
                                .HasColumnName("Clothing_Material");

                            t.Property("Size")
                                .HasColumnName("Clothing_Size");
                        });

                    b.HasDiscriminator().HasValue("Clothing");
                });

            modelBuilder.Entity("Ecommerce_Project.Models.Domain_Classes.Footwear", b =>
                {
                    b.HasBaseType("Ecommerce_Project.Models.Domain_Classes.Product");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsWaterproof")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Footwear");
                });
#pragma warning restore 612, 618
        }
    }
}
